name: "NswAdvPS"

#---------------------------------------------------------
# begin inputs: covariates and outcomes, plus dummy labels
#---------------------------------------------------------

layers {
  name: "input"         # treated and untreated data, half and half
  type: MEMORY_DATA
  top: "covariates"
  top: "_outcome_discard"
  memory_data_param {
    batch_size: 850     # NB: propagate any change to DUMMY_DATA
    channels: 7
    height: 1
    width: 1
  }
}

layers {
  name: "plus_one"
  type: DUMMY_DATA
  top: "plus_one"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 1
    }
    num: 425
    channels: 1
    height: 1
    width: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "zero"
  type: DUMMY_DATA
  top: "zero"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: 425
    channels: 1
    height: 1
    width: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "slice_covariates"
  type: SLICE
  bottom: "covariates"
  top: "treated_covariates"
  top: "untreated_covariates"
  slice_param {
    slice_dim: 0
  }

  include: { phase: TRAIN }
}

#----------------------------------------------
# begin scoring function
#----------------------------------------------

layers {
  name: "scoreip0"
  type: INNER_PRODUCT
  bottom: "covariates"
  top: "scoreip0"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "scorerelu0"
  type: RELU
  bottom: "scoreip0"
  top: "scoreip0"
}

layers {
  name: "prescore"
  type: INNER_PRODUCT
  bottom: "scoreip0"
  top: "prescore"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "slice_prescore_both"
  type: SLICE
  bottom: "prescore"
  top: "treated_prescore_both"
  top: "untreated_prescore_both"
  slice_param {
    slice_dim: 0
  }

  include: { phase: TRAIN }
}

layers {
  name: "treated_prescore"
  type: SLICE
  bottom: "treated_prescore_both"
  top: "_treated_prescore_discard"
  top: "treated_prescore"
  slice_param {
    slice_dim: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "treated_prescore_trans"
  type: RESHAPE
  bottom: "treated_prescore"
  top: "treated_prescore_trans"
  reshape_param { num: 1 channels: -1 height: 1 width: 1 }

  include: { phase: TRAIN }
}

layers {
  name: "treated_weight"
  type: SOFTMAX
  bottom: "treated_prescore_trans"
  top: "treated_weight"

  include: { phase: TRAIN }
}

layers {
  name: "treated_weight_trans"
  type: RESHAPE
  bottom: "treated_weight"
  top: "treated_weight_tran"

  reshape_param { num: -1 channels: 1 height: 1 width: 1 }

  include: { phase: TRAIN }
}

layers {
  name: "treated_weight_regularizer"
#type: MULTINOMIAL_LOGISTIC_LOSS
  type: EUCLIDEAN_LOSS
  bottom: "treated_weight_tran"
  bottom: "zero"
  top: "treated_weight_regularizer"

  include: { phase: TRAIN }
}

layers {
  name: "untreated_prescore"
  type: SLICE
  bottom: "untreated_prescore_both"
  top: "untreated_prescore"
  top: "_untreated_prescore_discard"
  slice_param {
    slice_dim: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "untreated_prescore_trans"
  type: RESHAPE
  bottom: "untreated_prescore"
  top: "untreated_prescore_trans"
  reshape_param { num: 1 channels: -1 height: 1 width: 1 }

  include: { phase: TRAIN }
}

layers {
  name: "untreated_weight"
  type: SOFTMAX
  bottom: "untreated_prescore_trans"
  top: "untreated_weight"

  include: { phase: TRAIN }
}

layers {
  name: "untreated_weight_trans"
  type: RESHAPE
  bottom: "untreated_weight"
  top: "untreated_weight_tran"

  reshape_param { num: -1 channels: 1 height: 1 width: 1 }

  include: { phase: TRAIN }
}

layers {
  name: "untreated_weight_regularizer"
#type: MULTINOMIAL_LOGISTIC_LOSS
  type: EUCLIDEAN_LOSS
  bottom: "untreated_weight_tran"
  bottom: "zero"
  top: "untreated_weight_regularizer"

  include: { phase: TRAIN }
}

#----------------------------------------------
# end scoring function
#----------------------------------------------

#----------------------------------------------
# begin non-adversarial statistics
#----------------------------------------------

layers {
  name: "treated_covariates_squared"
  type: POWER
  bottom: "treated_covariates"
  top: "treated_covariates_squared"
  power_param {
    power: 2
    scale: 1
    shift: 0
  }

  include: { phase: TRAIN }
}

layers {
  name: "treated_statistics"
  type: CONCAT
  bottom: "treated_covariates"
  bottom: "treated_covariates_squared"
  top: "treated_statistics"

  include: { phase: TRAIN }
}

layers {
  name: "untreated_covariates_squared"
  type: POWER
  bottom: "untreated_covariates"
  top: "untreated_covariates_squared"
  power_param {
    power: 2
    scale: 1
    shift: 0
  }

  include: { phase: TRAIN }
}

layers {
  name: "untreated_statistics"
  type: CONCAT
  bottom: "untreated_covariates"
  bottom: "untreated_covariates_squared"
  top: "untreated_statistics"

  include: { phase: TRAIN }
}

layers {
  name: "batchaverage_weighted_treated_statistics"
  type: WEIGHTED_BATCH_SUM
  bottom: "treated_weight"
  bottom: "treated_statistics"
  top: "batchaverage_weighted_treated_statistics"

  include: { phase: TRAIN }
}

layers {
  name: "batchaverage_weighted_untreated_statistics"
  type: WEIGHTED_BATCH_SUM
  bottom: "untreated_weight"
  bottom: "untreated_statistics"
  top: "batchaverage_weighted_untreated_statistics"

  include: { phase: TRAIN }
}

layers {
  name: "balancelambda0"
  type: GRADIENT_SCALER
  bottom: "batchaverage_weighted_treated_statistics"
  top: "batchaverage_weighted_treated_statistics_gsl"
  top: "balancelambda0"

  include: { phase: TRAIN }
}

layers {
  name: "balancelambda1"
  type: GRADIENT_SCALER
  bottom: "batchaverage_weighted_untreated_statistics"
  top: "batchaverage_weighted_untreated_statistics_gsl"
  top: "balancelambda1"

  include: { phase: TRAIN }
}

layers {
  name: "balance_loss"
  type: EUCLIDEAN_LOSS
  bottom: "batchaverage_weighted_treated_statistics_gsl"
  bottom: "batchaverage_weighted_untreated_statistics_gsl"
  top: "balance_loss"

  include: { phase: TRAIN }
}
