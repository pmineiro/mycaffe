name: "Nsw"

layers {
  name: "input"         # treated and untreated data, half and half
  type: MEMORY_DATA
  top: "data"
  top: "label"
  memory_data_param {
    batch_size: 850     # NB: propagate any change to DUMMY_DATA
    channels: 1
    height: 1
    width: 7
  }
}

layers {
  name: "ipm1"
  type: INNER_PRODUCT
  bottom: "data"
  top: "ipm1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "relum1"
  type: RELU
  bottom: "ipm1"
  top: "ipm1"
  relu_param {
    negative_slope: 0.0
  }
}

layers {
  name: "ip0"
  type: INNER_PRODUCT
  bottom: "ipm1"
  top: "ip0"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "relu0"
  type: RELU
  bottom: "ip0"
  top: "ip0"
  relu_param {
    negative_slope: 0.0
  }
}

layers {
  name: "ip1"
  type: INNER_PRODUCT
  bottom: "ip0"
  top: "ip1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "relu1"
  type: RELU
  bottom: "ip1"
  top: "ip1"
  relu_param {
    negative_slope: 0.0
  }
}

layers {
  name: "ip2"
  type: INNER_PRODUCT
  bottom: "ip1"
  top: "ip2"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160   
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "relu2"
  type: RELU
  bottom: "ip2"
  top: "ip2"
  relu_param {
    negative_slope: 0.0
  }
}

#----------------------------------------------
# ip2 is the common representation between predicting outcomes and treatments
#----------------------------------------------

#----------------------------------------------
# per-treatment variables
#----------------------------------------------

layers {
  name: "slice_features"
  type: SLICE
  bottom: "ip2"
  top: "treated_features"
  top: "untreated_features"
  slice_param {
    slice_dim: 0
  }
}

layers {
  name: "slice_labels"
  type: SLICE
  bottom: "label"
  top: "treated_outcomes"
  top: "untreated_outcomes"
  slice_param {
    slice_dim: 0
  }
}

#----------------------------------------------
# treated outcome predictor
#----------------------------------------------

layers {
  name: "treated_prediction"
  type: INNER_PRODUCT
  bottom: "treated_features"
  top: "treated_prediction"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "treated_loss"
  type: EUCLIDEAN_LOSS
  bottom: "treated_prediction"
  bottom: "treated_outcomes"
  top: "treated_loss"
}

#----------------------------------------------
# untreated outcome predictor
#----------------------------------------------

layers {
  name: "untreated_prediction"
  type: INNER_PRODUCT
  bottom: "untreated_features"
  top: "untreated_prediction"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "untreated_loss"
  type: EUCLIDEAN_LOSS
  bottom: "untreated_prediction"
  bottom: "untreated_outcomes"
  top: "untreated_loss"
}

#----------------------------------------------
# treatment predictor
#----------------------------------------------

#
# features for treatment predictor
#

layers {
  name: "treatmentpredictorgrl"
  type: GRADIENT_SCALER
  bottom: "ip2"
  top: "treatmentpredictorgrl"
  top: "treatmentpredictorscaleby"
}

layers {
  name: "treatment_prediction"
  type: INNER_PRODUCT
  bottom: "treatmentpredictorgrl"
  top: "treatment_prediction"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

#
# labels for treatment predictor
#

layers {
  name: "is_treated"
  type: DUMMY_DATA
  top: "is_treated_labels"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 1
    }
    num: 425
    channels: 1
    height: 1
    width: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "is_untreated"
  type: DUMMY_DATA
  top: "is_untreated_labels"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: 425
    channels: 1
    height: 1
    width: 1
  }

  include: { phase: TRAIN }
}

layers {
  name: "concat_labels"
  type: CONCAT
  bottom: "is_treated_labels"
  bottom: "is_untreated_labels"
  top: "treatment_labels"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

layers {
  name: "treatment_probability"
  type: SOFTMAX
  bottom: "treatment_prediction"
  top: "treatment_probability"
}

# 
# softmax loss for treatment predictor
#

layers {
  name: "treatment_loss"
  type: SOFTMAX_LOSS
  bottom: "treatment_prediction"
  bottom: "treatment_labels"
  top: "treatment_loss"

  include: { phase: TRAIN }
}
