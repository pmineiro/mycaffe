#! /usr/bin/env perl

use warnings;
use strict;

my $what = shift @ARGV or die;

my $pass = @ARGV ? shift @ARGV : 1;
my $lr = 0.00001 * (sqrt(1000) ** (1-$pass));
my $decay = ($pass == 1) ? 0.004 : 0.0;
my $path = ($pass == 1) ? "generated" : "generated$pass";
my $maxiter = ($pass == 1) ? 70000 : 8000;

my $seed = 4545 + $what;

print <<"EOD";
# reduce learning rate after 120 epochs (60000 iters) by factor 0f 10
# then another factor of 10 after 10 more epochs (5000 iters)

# The train/test net protocol buffer definition
net: "./generated/$what/cifar10_full_train_test.prototxt"
# test_iter specifies how many forward passes the test should carry out.
# In the case of CIFAR10, we have test batch size 100 and 100 test iterations,
# covering the full 10,000 testing images.
test_iter: 100
# Carry out testing every 1000 training iterations.
test_interval: 1000
# The base learning rate, momentum and the weight decay of the network.
base_lr: $lr
momentum: 0.9
weight_decay: $decay
# The learning rate policy
lr_policy: "fixed"
# Display every 200 iterations
display: 200
# The maximum number of iterations
max_iter: $maxiter
# snapshot intermediate results
#snapshot: 5000
snapshot_prefix: "./$path/$what/alexnet"
# solver mode: CPU or GPU
solver_mode: GPU
EOD
